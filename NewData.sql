CREATE TABLE USERS (
    U_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_Name VARCHAR(100) NOT NULL,
    U_Email VARCHAR(100) UNIQUE NOT NULL,
    U_Password VARCHAR(255) NOT NULL,
    U_Phone VARCHAR(15) NOT NULL,
    U_CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ADDRESS (
    AD_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_ID INT NOT NULL, --FOREIGN KEY BY USER TABLE
    AD_RecipientName VARCHAR(100) NOT NULL,
    AD_Street VARCHAR(255) NOT NULL,
    AD_City VARCHAR(100) NOT NULL,
    AD_State VARCHAR(50) NOT NULL, 
    AD_PostalCode VARCHAR(10) NOT NULL,
    AD_IsDefault BOOLEAN DEFAULT FALSE, --When AD_IsDefault = TRUE, this address will be automatically selected during checkout
    AD_Note TEXT, --Add delivery instructions
    FOREIGN KEY (U_ID) REFERENCES USERS(U_ID) ON DELETE CASCADE
);

CREATE TABLE CATEGORY (
    CAT_ID INT AUTO_INCREMENT PRIMARY KEY,
    CAT_NAME VARCHAR(100) NOT NULL
);

CREATE TABLE PRODUCT (
    P_ID INT AUTO_INCREMENT PRIMARY KEY,
    P_Name VARCHAR(100) NOT NULL,
    P_Description TEXT,
    P_Price DECIMAL(10,2) NOT NULL,
    P_Stock INT NOT NULL DEFAULT 0,  --NO NEED PRODUCT QUANTITY BECAUSE GOT ORDER ITEMS QUANTITY
    P_Image VARCHAR(255),
    CAT_ID INT NOT NULL,  --FOREIGN KEY BY CATEGORY TABLE
    FOREIGN KEY (CAT_ID) REFERENCES CATEGORY(CAT_ID) ON DELETE CASCADE
);

CREATE TABLE ORDER_STATUS (
    OS_ID INT AUTO_INCREMENT PRIMARY KEY,
    O_Status VARCHAR(255) NOT NULL --PENDING / PROCESSING / SHIPPED / DELIVERED
);

CREATE TABLE ORDERS (
    O_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_ID INT NOT NULL,  --FOREIGN KEY BY USER TABLE
    AD_ID INT NOT NULL, --FOREIGN KEY BY ADDRESS TABLE
    OS_ID INT NOT NULL, --FOREIGN KEY BY ORDER_STATUS TABLE
    O_Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    O_Subtotal DECIMAL(10,2) NOT NULL,  
    O_DeliveryFee DECIMAL(10,2) NOT NULL DEFAULT 5.00, --FIX DELIVERY FEE IS RM5.00
    O_Discount DECIMAL(10,2) DEFAULT 0.00,
    O_TotalAmount DECIMAL(10,2) NOT NULL,  -- totalamount = subtotal + delivery fee - discount 
    FOREIGN KEY (U_ID) REFERENCES USER(U_ID) ON DELETE CASCADE,
    FOREIGN KEY (AD_ID) REFERENCES ADDRESS(AD_ID),
    FOREIGN KEY (OS_ID) REFERENCES ORDER_STATUS(OS_ID)
);

CREATE TABLE ORDER_ITEMS (
    OI_ID INT AUTO_INCREMENT PRIMARY KEY,
    O_ID INT NOT NULL, --FOREIGN KEY BY ORDER TABLE
    P_ID INT NOT NULL, --FOREIGN KEY BY PRODUCT TABLE
    OI_Quantity INT NOT NULL,
    OI_Price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (O_ID) REFERENCES ORDERS(O_ID) ON DELETE CASCADE,
    FOREIGN KEY (P_ID) REFERENCES PRODUCT(P_ID)
);

CREATE TABLE PAYMENT (
    P_ID INT AUTO_INCREMENT PRIMARY KEY,
    O_ID INT NOT NULL, --FOREIGN KEY BY ORDER TABLE
    P_Method ENUM('credit_card','bank_transfer','ewallet','cash_on_delivery') NOT NULL,
    P_Amount DECIMAL(10,2) NOT NULL,
    P_Status ENUM('pending','completed','failed','refunded') DEFAULT 'pending',  --NO NEED STATUS, AFTER USER PLACE ORDER, PAYMENT STATUS DIRECTLY SHOW COMPLETED
    P_TransactionID VARCHAR(100),
    P_Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    P_Last4Digits VARCHAR(4),  --FOR CREDIT CARD LAST 4 DIGITS
    FOREIGN KEY (O_ID) REFERENCES ORDERS(O_ID) ON DELETE CASCADE
);

--! IS FOR RIDER SYSTEM [DEPENDS]
CREATE TABLE DELIVERY_STATUS (
    DS_ID INT AUTO_INCREMENT PRIMARY KEY, 
    D_Status VARCHAR(255) NOT NULL -- PROCESSING / DISPATCHED / OUT OF DELIVERY / DELIVERED
);

CREATE TABLE DELIVERY (
    D_ID INT AUTO_INCREMENT PRIMARY KEY,
    O_ID INT NOT NULL,  --FOREIGN KEY BY ORDER TABLE
    DS_ID INT NOT NULL, --FOREIGN KEY BY DELIVERY_STATUS TABLE
    D_Carrier VARCHAR(50) DEFAULT 'STANDARD DELIVERY',
    D_TrackingNumber VARCHAR(50),
    D_StartDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    D_EstimatedDelivery DATE,
    D_ActualDelivery TIMESTAMP NULL,
    D_Notes TEXT,
    FOREIGN KEY (O_ID) REFERENCES ORDERS(O_ID) ON DELETE CASCADE,
    FOREIGN KEY (DS_ID) REFERENCES DELIVERY_STATUS(DS_ID)
);

CREATE TABLE CART (
    CART_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_ID INT NULL,  -- NULL for GUEST USER
    SESSION_ID VARCHAR(100) NULL,  -- For GUEST CART
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (U_ID) REFERENCES USER(U_ID) ON DELETE CASCADE,
    CONSTRAINT chk_user_or_session 
       CHECK( (U_ID IS NOT NULL AND SESSION_ID IS NULL) 
       OR (U_ID IS NULL AND SESSION_ID IS NOT NULL) ),
    UNIQUE KEY uq_cart_session (SESSION_ID)
);

CREATE TABLE CART_ITEMS (
    CART_ITEM_ID INT AUTO_INCREMENT PRIMARY KEY,
    CART_ID INT NOT NULL,  --FOREIGN KEY BY CART TABLE
    P_ID INT NOT NULL,  --FOREIGN KEY BY PRODUCT TABLE
    QUANTITY INT NOT NULL DEFAULT 1 CHECK (QUANTITY > 0),
    FOREIGN KEY (CART_ID) REFERENCES CART(CART_ID) ON DELETE CASCADE,
    FOREIGN KEY (P_ID) REFERENCES PRODUCT(P_ID) ON DELETE CASCADE,
    UNIQUE KEY (CART_ID, P_ID)  -- Prevent duplicate products in cart
);

--! NO COMMENT TABLE SQL-----------------------------------------------------------------------------------

CREATE TABLE USERS (
    U_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_Name VARCHAR(100) NOT NULL,
    U_Email VARCHAR(100) UNIQUE NOT NULL,
    U_Password VARCHAR(255) NOT NULL,
    U_Phone VARCHAR(15) NOT NULL,
    U_CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ADDRESS (
    AD_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_ID INT NOT NULL, 
    AD_RecipientName VARCHAR(100) NOT NULL,
    AD_Street VARCHAR(255) NOT NULL,
    AD_City VARCHAR(100) NOT NULL,
    AD_State VARCHAR(50) NOT NULL, 
    AD_PostalCode VARCHAR(10) NOT NULL,
    AD_IsDefault BOOLEAN DEFAULT FALSE, 
    AD_Note TEXT, 
    FOREIGN KEY (U_ID) REFERENCES USERS(U_ID) ON DELETE CASCADE
);

CREATE TABLE CATEGORY (
    CAT_ID INT AUTO_INCREMENT PRIMARY KEY,
    CAT_NAME VARCHAR(100) NOT NULL
);

CREATE TABLE PRODUCT (
    P_ID INT AUTO_INCREMENT PRIMARY KEY,
    P_Name VARCHAR(100) NOT NULL,
    P_Description TEXT,
    P_Price DECIMAL(10,2) NOT NULL,
    P_Stock INT NOT NULL DEFAULT 0,  
    P_Image VARCHAR(255),
    CAT_ID INT NOT NULL,  
    FOREIGN KEY (CAT_ID) REFERENCES CATEGORY(CAT_ID) ON DELETE CASCADE
);

CREATE TABLE ORDER_STATUS (
    OS_ID INT AUTO_INCREMENT PRIMARY KEY,
    O_Status VARCHAR(255) NOT NULL 
);

CREATE TABLE ORDERS (
    O_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_ID INT NOT NULL,  
    AD_ID INT NOT NULL, 
    OS_ID INT NOT NULL, 
    O_Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    O_Subtotal DECIMAL(10,2) NOT NULL,  
    O_DeliveryFee DECIMAL(10,2) NOT NULL DEFAULT 5.00, 
    O_Discount DECIMAL(10,2) DEFAULT 0.00,
    O_TotalAmount DECIMAL(10,2) NOT NULL,  
    FOREIGN KEY (U_ID) REFERENCES USERS(U_ID) ON DELETE CASCADE,
    FOREIGN KEY (AD_ID) REFERENCES ADDRESS(AD_ID),
    FOREIGN KEY (OS_ID) REFERENCES ORDER_STATUS(OS_ID)
);

CREATE TABLE ORDER_ITEMS (
    OI_ID INT AUTO_INCREMENT PRIMARY KEY,
    O_ID INT NOT NULL, 
    P_ID INT NOT NULL, 
    OI_Quantity INT NOT NULL,
    OI_Price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (O_ID) REFERENCES ORDERS(O_ID) ON DELETE CASCADE,
    FOREIGN KEY (P_ID) REFERENCES PRODUCT(P_ID)
);

CREATE TABLE PAYMENT (
    P_ID INT AUTO_INCREMENT PRIMARY KEY,
    O_ID INT NOT NULL, 
    P_Method ENUM('credit_card','bank_transfer','ewallet','cash_on_delivery') NOT NULL,
    P_Amount DECIMAL(10,2) NOT NULL,
    P_Status ENUM('pending','completed','failed','refunded') DEFAULT 'pending', 
    P_TransactionID VARCHAR(100),
    P_Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    P_Last4Digits VARCHAR(4),  
    FOREIGN KEY (O_ID) REFERENCES ORDERS(O_ID) ON DELETE CASCADE
);

CREATE TABLE DELIVERY_STATUS (
    DS_ID INT AUTO_INCREMENT PRIMARY KEY,
    D_Status VARCHAR(255) NOT NULL 
);

CREATE TABLE DELIVERY (
    D_ID INT AUTO_INCREMENT PRIMARY KEY,
    O_ID INT NOT NULL,  
    DS_ID INT NOT NULL,
    D_Carrier VARCHAR(50) DEFAULT 'STANDARD DELIVERY',
    D_TrackingNumber VARCHAR(50),
    D_StartDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    D_EstimatedDelivery DATE,
    D_ActualDelivery TIMESTAMP NULL,
    D_Notes TEXT,
    FOREIGN KEY (O_ID) REFERENCES ORDERS(O_ID) ON DELETE CASCADE,
    FOREIGN KEY (DS_ID) REFERENCES DELIVERY_STATUS(DS_ID)
);

CREATE TABLE CART (
    CART_ID INT AUTO_INCREMENT PRIMARY KEY,
    U_ID INT NULL,  
    SESSION_ID VARCHAR(100) NULL,  
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (U_ID) REFERENCES USERS(U_ID) ON DELETE CASCADE,
    CONSTRAINT chk_user_or_session 
       CHECK( (U_ID IS NOT NULL AND SESSION_ID IS NULL) 
       OR (U_ID IS NULL AND SESSION_ID IS NOT NULL) ),
    UNIQUE KEY uq_cart_session (SESSION_ID)
);

CREATE TABLE CART_ITEMS (
    CART_ITEM_ID INT AUTO_INCREMENT PRIMARY KEY,
    CART_ID INT NOT NULL,  
    P_ID INT NOT NULL,  
    QUANTITY INT NOT NULL DEFAULT 1 CHECK (QUANTITY > 0),
    FOREIGN KEY (CART_ID) REFERENCES CART(CART_ID) ON DELETE CASCADE,
    FOREIGN KEY (P_ID) REFERENCES PRODUCT(P_ID) ON DELETE CASCADE,
    UNIQUE KEY (CART_ID, P_ID)  
);
